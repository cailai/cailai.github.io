<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git基础</title>
    <url>/2021/07/05/Git%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h1><p>1、查看配置   </p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">git config -l</span><br></pre></td></tr></tbody></table></figure>

<p>2、查看系统配置</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">git config --system --list</span><br></pre></td></tr></tbody></table></figure>

<p>3、查看当前用户配置</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">git config  --global --list</span><br></pre></td></tr></tbody></table></figure>

<h1 id="Git项目搭建"><a href="#Git项目搭建" class="headerlink" title="Git项目搭建"></a>Git项目搭建</h1><p>1、从工作目录到暂存区</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></tbody></table></figure>

<p>2、从暂存区提交到本地仓库</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">git commit</span><br></pre></td></tr></tbody></table></figure>

<p>3、从本地仓库提交到远程</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></tbody></table></figure>

<h1 id="Git文件操作"><a href="#Git文件操作" class="headerlink" title="Git文件操作"></a>Git文件操作</h1><p>1、本地仓库搭建</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></tbody></table></figure>

<p>2、克隆远程仓库</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">git clone [链接地址]</span><br></pre></td></tr></tbody></table></figure>

<h1 id="查看文件状态"><a href="#查看文件状态" class="headerlink" title="查看文件状态"></a>查看文件状态</h1><p>1、查看指定文件状态</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">git status [文件名]</span><br></pre></td></tr></tbody></table></figure>

<p>2、查看所有文件状态</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">git status</span><br><span class="line"></span><br><span class="line"># git add .     提交所有文件到暂存区</span><br><span class="line"># git commit -m "消息内容"		 提交暂存区中的内容到本地仓库 -m 提交信息</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基础</title>
    <url>/2021/07/06/Markdown%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="Markdown基础"><a href="#Markdown基础" class="headerlink" title="Markdown基础"></a>Markdown基础</h1><p>一、标题</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#+空格+标题名字</span><br><span class="line"></span><br><span class="line"># +标题名字   几个 "#" 就代表几级标题，最多支持六级标题</span><br></pre></td></tr></tbody></table></figure>

<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>二、字体</p>
<p>1、粗体（**）</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">**文字内容**	两边加 "**" 表示 “粗体” </span><br></pre></td></tr></tbody></table></figure>

<p><strong>Hello,World!</strong></p>
<p>2、斜体（*）</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">*文字内容*		两边加 "*" 表示 “斜体” </span><br></pre></td></tr></tbody></table></figure>

<p><em>Hello,World!</em></p>
<p>3、斜体加粗（***）</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">***文字内容***   三个 "***" 表示 “斜体加粗”</span><br></pre></td></tr></tbody></table></figure>

<p><em><strong>Hello,World!</strong></em></p>
<p>4、中间删除线（~~）</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">~~文字内容~~    两边加 "~~" 表示 “中间删除线”</span><br></pre></td></tr></tbody></table></figure>

<p><del>Hello,World!</del></p>
<p>三、引用</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">&gt; 				"&gt;"+空格 表示 “引用”</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>引用测试、引用测试</p>
</blockquote>
<p>四、分割线</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">---				"---" 表示 “分割线”,占全屏</span><br><span class="line">***				"***" 表示 “分割线”,占全屏</span><br></pre></td></tr></tbody></table></figure>

<hr>
<hr>
<p>五、图片</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">![图片名字](图片路径)	</span><br><span class="line"></span><br><span class="line">[]里面表示图片的名字，()里面表示图片的路径，可以是本地的图片，也可也是网上的图片</span><br></pre></td></tr></tbody></table></figure>

<p>1、本地图片</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">![图片名字](图片保存的路径)</span><br></pre></td></tr></tbody></table></figure>

<p>2、网上图片</p>
<p><img src="https://gitee.com/cailaiblog/img/raw/master/%E5%9B%BE%E7%89%871%E5%89%AF%E6%9C%AC.jpg" alt="图片"></p>
<p>六、超链接</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">[标题](链接地址)		   []里面表示超链接的内容</span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://cailaiblog.top/">点击跳转到CaiLai的小站</a></p>
<p>七、列表</p>
<p>1、有序列表</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">1.A				数字.空格（1点号空格）</span><br></pre></td></tr></tbody></table></figure>

<ol>
<li>A</li>
<li>B</li>
<li>C</li>
</ol>
<p>2、无序列表</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">- 				-空格（减号空格）</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li>A</li>
<li>B</li>
<li>C</li>
</ul>
<p>八、表格</p>
<p>1、方法1</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">标题1|标题2|标题2</span><br><span class="line">--|--|--</span><br><span class="line">内容1|内容2|内容3</span><br></pre></td></tr></tbody></table></figure>

<table>
<thead>
<tr>
<th>名字</th>
<th>性别</th>
<th>生日</th>
</tr>
</thead>
<tbody><tr>
<td>陈情</td>
<td>男</td>
<td>2000.7.4</td>
</tr>
</tbody></table>
<p>2、方法2</p>
<p>在Typora里面鼠标右键选择： 插入——&gt;表格<br>然后根据自己的需要选择适当的表格格式。</p>
<p>九、代码</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">​```java			```+语言</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line">system.out.print(<span class="string">"hello,world"</span>)</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">"hello,world"</span></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/06/08/hello-world/</url>
    <content><![CDATA[<p>欢迎来到 <a href="https://hexo.io/">Hexo</a>！这是我的第一篇文章。查看 <a href="https://hexo.io/docs/">文档</a> 以获取更多信息。如果你在使用 Hexo 时遇到任何问题，你可以在 <a href="https://hexo.io/docs/troubleshooting.html">故障排除</a> 中找到答案，也可以在 <a href="https://github.com/hexojs/hexo/issues">GitHub</a> 上问我。</p>
<h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="创建一个新帖子"><a href="#创建一个新帖子" class="headerlink" title="创建一个新帖子"></a>创建一个新帖子</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure>

<p>更多信息: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure>

<p>更多信息: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>

<p>更多信息: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>

<p>更多信息: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Markdown</tag>
        <tag>Node.js</tag>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
        <tag>Gitee</tag>
        <tag>Coding</tag>
        <tag>博客</tag>
        <tag>Butterfly</tag>
        <tag>美化</tag>
        <tag>Dos</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP虚拟机配置</title>
    <url>/2021/09/10/PHP%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h4 id="一、配置虚拟主机"><a href="#一、配置虚拟主机" class="headerlink" title="一、配置虚拟主机"></a>一、配置虚拟主机</h4><p>​        <strong>1. 找到</strong>：<strong>C:\Windows\System32\drivers\etc\hosts</strong> 文件</p>
<p>​        </p>
<p>​        <strong>2. 在hosts文件中配置IP地址和域名的映射关系：</strong><br>​                127.0.0.1 <a href="http://www.myframe.test/">www.myframe.test</a><br>​                127.0.0.1 myframe.test<br>​            <strong>这样做的好处是：</strong>我们想要任何的域名，都可以通过hosts文件来使用它。<br>​            <strong>缺点是：</strong>我们只能在本地进行使用。如果换了一台电脑，那么只能更改它的hosts文件。</p>
<p>​        <strong>3.修改：httpd.conf文件，启用虚拟主机配置文件，去掉“#”号：</strong></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"># Include conf/extra/httpd-vhosts.conf</span><br></pre></td></tr></tbody></table></figure>

<p>​        </p>
<p>​        <strong>4.修改：C:\Web\Apache24\conf\extra 目录下的 httpd-vhosts.conf 配置文件</strong></p>
<pre><code># 本地主机
&lt;VirtualHost *:8081&gt;
    DocumentRoot "C:/Web/Apache24/htdocs"
    ServerName localhost
&lt;/VirtualHost&gt;

# 虚拟主机
&lt;VirtualHost *:8081&gt;
    # 文档根
    DocumentRoot "E:/web/www/myframe/public"
    # 服务器名字
    ServerName www.myframe.test
    # 服务器别名
    ServerAlias myframe.test
&lt;/VirtualHost&gt;
</code></pre>
<p><strong>本地主机</strong>使用：<strong>localhost:8081</strong>    或者    <strong>127.0.0.1:8081</strong>    进行访问。</p>
<p><strong>虚拟主机</strong>使用：<strong><a href="http://www.myframe.test:8081/">www.myframe.test:8081</a></strong>    或者    <strong>myframe.test:8081</strong>    进行访问。</p>
<h4 id="二、访问权限控制"><a href="#二、访问权限控制" class="headerlink" title="二、访问权限控制"></a>二、访问权限控制</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"># “/表示根目录”</span><br><span class="line">&lt;Directory /&gt;</span><br><span class="line">	AllowOverride none	不要读取分布式配置文件</span><br><span class="line">	Require all denied	访问权限控制配置，表示对特定的目录阻止所有的访问。</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 代码解析</span><br><span class="line">Require all granted  # 表示对特定的目录允许访问</span><br><span class="line">AllowOverride All    # 表示允许读取分布式配置文件。开启的缺点：会降低服务器的性能</span><br><span class="line">Options Indexes FollowSymLinks   # Options Indexes表示开启目录索引，如果不让它显示可以加个-号。FollowSymLinks表示允许符号链接。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 虚拟机配置文件中添加代码</span><br><span class="line"># 目录权限配置</span><br><span class="line">&lt;Directory "E:/web/www/myframe/public"&gt;</span><br><span class="line">	Options -indexes	表示不开启目录索引</span><br><span class="line">	AllowOverride All	允许读取分布式文件</span><br><span class="line">	Require local		表示只允许本地访问</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></tbody></table></figure>



<h4 id="三、三个配置文件"><a href="#三、三个配置文件" class="headerlink" title="三、三个配置文件"></a>三、三个配置文件</h4><p>​    1.<strong>C:\Windows\System32\drivers\etc\host</strong></p>
<p>​            hosts：系统配置文件，配置域名</p>
<p>​    2.‪<strong>C:\Web\Apache24\conf\httpd.conf</strong></p>
<p>​            httpd.conf：Apache服务器配置文件</p>
<p>​    3.<strong>C:\Web\Apache24\conf\extra\httpd-vhosts.conf</strong></p>
<p>​            httpd-vhosts.conf：虚拟机配置文件</p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>常用基础Dos命令</title>
    <url>/2021/07/06/%E5%9F%BA%E6%9C%ACDos%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="基本Dos命令"><a href="#基本Dos命令" class="headerlink" title="基本Dos命令"></a>基本Dos命令</h1><h4 id="一、打开CMD的方式"><a href="#一、打开CMD的方式" class="headerlink" title="一、打开CMD的方式"></a>一、打开CMD的方式</h4><ol>
<li>开始 ——&gt; Windows命令 ——&gt; 命令提示符。</li>
<li>Win键+R，输入cmd打开控制台。（推荐使用）</li>
<li>在任意文件下面，按住shift键+鼠标右键点击，选择 ”在此处打开Powershell窗口(S) “ 选项。</li>
<li>在资源管理器的地址栏最前面加上 cmd。</li>
</ol>
<h4 id="二、管理员方式运行"><a href="#二、管理员方式运行" class="headerlink" title="二、管理员方式运行"></a>二、管理员方式运行</h4><ol>
<li>开始 ——&gt; Windows命令 ——&gt; 命令提示符 ——&gt; 右击选择”更多“ ——&gt;  选择”以管理员身份运行“。</li>
</ol>
<h4 id="三、常用的Dos命令"><a href="#三、常用的Dos命令" class="headerlink" title="三、常用的Dos命令"></a>三、常用的Dos命令</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">1.盘符切换</span><br><span class="line">    D:			盘符+:  (注意“:”是英文状态下的符号)</span><br><span class="line">    cd: /d e:	“/d”参数表示跨盘符切换【重点】</span><br><span class="line"></span><br><span class="line">2.查看到当前目录下的所有文件</span><br><span class="line">	dir			可以先使用“D:”命令先进入盘里，然后输入dir命令可以查看当前目录下的所有文件</span><br><span class="line"></span><br><span class="line">3.切换目录</span><br><span class="line">    cd change directory</span><br><span class="line">    cd ..  		..代表上一级</span><br><span class="line"></span><br><span class="line">4.清理屏幕</span><br><span class="line">	cls			全文是：clear screen</span><br><span class="line">	</span><br><span class="line">5.退出终端</span><br><span class="line">	exit</span><br><span class="line">	</span><br><span class="line">6.查看电脑IP</span><br><span class="line">	ipconfig</span><br><span class="line">	</span><br><span class="line">7.常用小工具命令</span><br><span class="line">	calc		计算器</span><br><span class="line">	mspaint		画图工具</span><br><span class="line">	notepad		记事本</span><br><span class="line">	</span><br><span class="line">8.ping命令</span><br><span class="line">	ping www.baidu.com		(注：命令行界面“鼠标右击”粘贴)</span><br><span class="line">	</span><br><span class="line">9.文件基本操作命令</span><br><span class="line">	cd /d C:\Users\15267\Desktop	表示进入桌面</span><br><span class="line">	md Test【目录名】			md表示创建文件夹Test</span><br><span class="line">	cd Test【目录名】			cd表示进入文件夹Test</span><br><span class="line">	cd&gt;index.txt【文件名】		表示创建一个文件index.txt</span><br><span class="line">	del index.txt【文件名】		表示删除一个文件index.txt</span><br><span class="line">	cd ..			表示回到上一级</span><br><span class="line">	rd Test【目录名】			rd表示删除文件夹Test (注：直接删除，不放在回收站里)</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>常用基础Dos命令</category>
      </categories>
      <tags>
        <tag>常用基础Dos命令</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis入门</title>
    <url>/2021/09/15/MyBatis%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h3 id="一、关于Maven的项目结构"><a href="#一、关于Maven的项目结构" class="headerlink" title="一、关于Maven的项目结构"></a>一、关于Maven的项目结构</h3><p><strong>Maven的安装和配置：</strong><a href="https://blog.csdn.net/weixin_43811057/article/details/108235117">https://blog.csdn.net/weixin_43811057/article/details/108235117</a></p>
<p><strong>IDEA的常用设置：</strong><a href="https://blog.csdn.net/weixin_42877515/article/details/106519142">https://blog.csdn.net/weixin_42877515/article/details/106519142</a></p>
<p><strong>以下代码参考MyBatis入门官网：</strong><a href="https://mybatis.org/mybatis-3/zh/getting-started.html">https://mybatis.org/mybatis-3/zh/getting-started.html</a></p>
<p>一、在pom.xml文件中导入pom坐标，刷新。</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- dependencies：用来存放pom坐标--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>二、项目目录中，src写源代码</p>
<p>​    2.1、main：存放源代码、其它配置文件的。</p>
<p>​        （1）java：存放源代码的</p>
<p>​        （2）resources：配置文件、静态资源。例如以下 <strong>mybatis_config.xml</strong> 配置文件</p>
<p>​            <strong>例如以下XML 配置文件中包含了对 MyBatis 系统的核心设置，包括获取数据库连接实例的数据源（DataSource）以及决定事务作用域和控制方式的事务管理器（TransactionManager）。</strong></p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--configuration：MyBatis的配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--environments：环境配置</span></span><br><span class="line"><span class="comment">        default属性：设置默认环境，默认值为：development(开发环境)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--environment标签：设置指定环境</span></span><br><span class="line"><span class="comment">            id属性：设置指定环境的名字--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"${driver}"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"${url}"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"${username}"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"${password}"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"org/mybatis/example/BlogMapper.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>​    2.2、test：做测试的</p>
<h3 id="二、关于MyBatis学习笔记"><a href="#二、关于MyBatis学习笔记" class="headerlink" title="二、关于MyBatis学习笔记"></a>二、关于MyBatis学习笔记</h3><p><strong>参考Maven官方仓库：</strong><a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p>
<h4 id="2021年9月15日学习总结"><a href="#2021年9月15日学习总结" class="headerlink" title="2021年9月15日学习总结"></a>2021年9月15日学习总结</h4><h5 id="1、pom坐标"><a href="#1、pom坐标" class="headerlink" title="1、pom坐标"></a>1、pom坐标</h5><p><strong>pom.xml</strong> 文件里面写pom坐标。坐标在Maven仓库复制粘贴</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    &lt;dependencies&gt;：pom坐标写在这对标签之中</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="2、mybatis-config-xml配置文件"><a href="#2、mybatis-config-xml配置文件" class="headerlink" title="2、mybatis-config.xml配置文件"></a>2、mybatis-config.xml配置文件</h5><p>在<strong>resource</strong>目录下创建：<strong>mybatis-config.xm</strong>l 配置文件。并书写相关配置。</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置文件的根目录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &lt;properties&gt;：用于引入外部配置文件</span></span><br><span class="line"><span class="comment">        resource：通过相对的物理路径引入</span></span><br><span class="line"><span class="comment">        url：通过网络路径引入</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"db.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置mybatis使用log4j日志 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"LOG4J"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &lt;typeAliases&gt;表示为我们引用的实体类起别名，默认情况下我们需要在映射文件中写类的完全限定名</span></span><br><span class="line"><span class="comment">        如果在此处做了配置，那么可以写类的别名</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            第一种：</span></span><br><span class="line"><span class="comment">            &lt;typeAlias&gt;：用于给指定的实体类起别名</span></span><br><span class="line"><span class="comment">            type：写实体类的类路径</span></span><br><span class="line"><span class="comment">            此时，别名就是我们的类名，并且别名是忽略大小写的</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;typeAlias type="com.sys.bean.Employee"&gt;&lt;/typeAlias&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            第二种：</span></span><br><span class="line"><span class="comment">            alias：为实体类指定一个别名</span></span><br><span class="line"><span class="comment">            此时，实体类的别名就是alias的属性值</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;typeAlias type="com.sys.bean.Employee" alias="emp"&gt;&lt;/typeAlias&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">           第三种：</span></span><br><span class="line"><span class="comment">           当实体类过多时，可以使用&lt;package&gt;进行批量起别名</span></span><br><span class="line"><span class="comment">           name：实体类所在的包</span></span><br><span class="line"><span class="comment">           此时，指定包下面的所有实体类都会起别名，实体类的别名是：类名。并且忽略大小写</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.sys.bean"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        在实际的开发过程中，我们可能分为开发环境、生产环境，测试环境等等，每个环境的配置可以是不一样的。</span></span><br><span class="line"><span class="comment">        &lt;environments&gt;：存放各个环境的配置，并使用 属性default来设置当前的环境。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            &lt;environment&gt;：设置指定的环境</span></span><br><span class="line"><span class="comment">            id：设置该环境的名字，方便default属性引用</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;transactionManager&gt;：配置事务管理器，采用JDBC的事务管理 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;dataSource&gt;：配置数据源，采用POOLED（数据库连接池） --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    &lt;property&gt;：配置数据库连接信息</span></span><br><span class="line"><span class="comment">                    使用${}去引用外部文件当中的连接信息</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"${jdbc.driver}"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"${jdbc.url}"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"${jdbc.username}"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"${jdbc.password}"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 第四步 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;mappers&gt;：在这个标签中，引入mapper映射文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            &lt;mapper&gt;：使用该标签引入mapper映射文件</span></span><br><span class="line"><span class="comment">            resource：使用相对的物理路径直接引入</span></span><br><span class="line"><span class="comment">            class：使用接口的类路径，间接引入</span></span><br><span class="line"><span class="comment">            url：通过网络路径引入</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;mapper resource="org/mybatis/example/BlogMapper.xml"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;mapper class="com.sys.mapper.EmpMapper"&gt;&lt;/mapper&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            当映射文件过多时，可以使用&lt;package&gt;标签进行批量引入</span></span><br><span class="line"><span class="comment">            name：写编译之后的mapper接口、mapper映射文件所在的包名</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.sys.mapper"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="3、db-properties配置文件"><a href="#3、db-properties配置文件" class="headerlink" title="3、db.properties配置文件"></a>3、db.properties配置文件</h5><p>在<strong>resource</strong>目录下创建：<strong>db.properties</strong> 配置文件。并书写<strong>数据库</strong>相关配置文件。</p>
<figure class="highlight properties"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/myemployees?serverTimezone=GMT		// myemployees数据库的名字</span></span><br><span class="line"><span class="meta">jdbc.username</span>=<span class="string">root		// 数据库用户名</span></span><br><span class="line"><span class="meta">jdbc.password</span>=			<span class="string">// 数据库密码</span></span><br></pre></td></tr></tbody></table></figure>

<p><strong>注意：</strong> MySQL版本5.5的话可以直接写，如果版本大于5.5或版本较高时，第一行代码可以修改成下方代码：</p>
<figure class="highlight properties"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="4、log4j-properties配置文件"><a href="#4、log4j-properties配置文件" class="headerlink" title="4、log4j.properties配置文件"></a>4、log4j.properties配置文件</h5><p>在<strong>resource</strong>目录下创建：<strong>log4j.properties</strong> 配置文件。并书写<strong>日志</strong>相关配置文件。</p>
<figure class="highlight properties"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">DEBUG,Console</span></span><br><span class="line"><span class="comment">#Console</span></span><br><span class="line"><span class="meta">log4j.appender.Console</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.Target</span>=<span class="string">System.out</span></span><br><span class="line"><span class="meta">log4j.appender.Console.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.Console.layout.ConversionPattern</span>=<span class="string">%d [%t] %-5p [%c] - %m%n</span></span><br><span class="line"><span class="meta">log4j.logger.org.apache</span>=<span class="string">ERROR</span></span><br><span class="line"><span class="meta">log4j.logger.org.mybatis</span>=<span class="string">ERROR</span></span><br><span class="line"><span class="meta">log4j.logger.org.springframework</span>=<span class="string">ERROR</span></span><br><span class="line"><span class="comment">#这个需要</span></span><br><span class="line"><span class="meta">log4j.logger.log4jdbc.debug</span>=<span class="string">ERROR</span></span><br><span class="line"><span class="meta">log4j.logger.com.gk.mapper</span>=<span class="string">ERROR</span></span><br><span class="line"><span class="meta">log4j.logger.jdbc.audit</span>=<span class="string">ERROR</span></span><br><span class="line"><span class="meta">log4j.logger.jdbc.resultset</span>=<span class="string">ERROR</span></span><br><span class="line"><span class="comment">#这个打印SQL语句非常重要</span></span><br><span class="line"><span class="meta">log4j.logger.jdbc.sqlonly</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.jdbc.sqltiming</span>=<span class="string">ERROR</span></span><br><span class="line"><span class="meta">log4j.logger.jdbc.connection</span>=<span class="string">FATAL</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><p><strong>到此步，上方的代码基本上固定了，可以直接复制粘贴。</strong></p>
<p><strong>下方代码属于逻辑业务阶段，可自行根据业务需求进行编写</strong></p>
<h5 id="5、创建JavaBean文件"><a href="#5、创建JavaBean文件" class="headerlink" title="5、创建JavaBean文件"></a>5、创建JavaBean文件</h5><p>在<strong>java</strong>目录下创建：**com.sys.bean **包，并在里面创建 <strong>Employee.java</strong> 实体类。</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//第一步</span></span><br><span class="line"><span class="keyword">package</span> com.sys.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数据表employees所对应的实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>{</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工的id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> employee_id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工的名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String first_name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工的姓</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String last_name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工的邮箱</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工的电话号码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String phone_number;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工的工作编号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String job_id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工的工资</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> salary;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工的奖金</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> commission_pct;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工的管理者的id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> manager_id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工所在部门的id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> department_id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工的入职时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date hiredate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造器：无参、有参</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">()</span> </span>{</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(<span class="keyword">int</span> employee_id, String first_name, String last_name, String email, String phone_number, String job_id, <span class="keyword">double</span> salary, <span class="keyword">double</span> commission_pct, <span class="keyword">int</span> manager_id, <span class="keyword">int</span> department_id, Date hiredate)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.employee_id = employee_id;</span><br><span class="line">        <span class="keyword">this</span>.first_name = first_name;</span><br><span class="line">        <span class="keyword">this</span>.last_name = last_name;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">        <span class="keyword">this</span>.phone_number = phone_number;</span><br><span class="line">        <span class="keyword">this</span>.job_id = job_id;</span><br><span class="line">        <span class="keyword">this</span>.salary = salary;</span><br><span class="line">        <span class="keyword">this</span>.commission_pct = commission_pct;</span><br><span class="line">        <span class="keyword">this</span>.manager_id = manager_id;</span><br><span class="line">        <span class="keyword">this</span>.department_id = department_id;</span><br><span class="line">        <span class="keyword">this</span>.hiredate = hiredate;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get和set</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getEmployee_id</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> employee_id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmployee_id</span><span class="params">(<span class="keyword">int</span> employee_id)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.employee_id = employee_id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirst_name</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> first_name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirst_name</span><span class="params">(String first_name)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.first_name = first_name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLast_name</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> last_name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLast_name</span><span class="params">(String last_name)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.last_name = last_name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPhone_number</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> phone_number;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPhone_number</span><span class="params">(String phone_number)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.phone_number = phone_number;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getJob_id</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> job_id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJob_id</span><span class="params">(String job_id)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.job_id = job_id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getSalary</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSalary</span><span class="params">(<span class="keyword">double</span> salary)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.salary = salary;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getCommission_pct</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> commission_pct;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCommission_pct</span><span class="params">(<span class="keyword">double</span> commission_pct)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.commission_pct = commission_pct;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getManager_id</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> manager_id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setManager_id</span><span class="params">(<span class="keyword">int</span> manager_id)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.manager_id = manager_id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDepartment_id</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> department_id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDepartment_id</span><span class="params">(<span class="keyword">int</span> department_id)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.department_id = department_id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getHiredate</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> hiredate;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHiredate</span><span class="params">(Date hiredate)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.hiredate = hiredate;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写toString方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Employee{"</span> +</span><br><span class="line">                <span class="string">"employee_id="</span> + employee_id +</span><br><span class="line">                <span class="string">", first_name='"</span> + first_name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", last_name='"</span> + last_name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", email='"</span> + email + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", phone_number='"</span> + phone_number + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", job_id='"</span> + job_id + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", salary="</span> + salary +</span><br><span class="line">                <span class="string">", commission_pct="</span> + commission_pct +</span><br><span class="line">                <span class="string">", manager_id="</span> + manager_id +</span><br><span class="line">                <span class="string">", department_id="</span> + department_id +</span><br><span class="line">                <span class="string">", hiredate="</span> + hiredate +</span><br><span class="line">                <span class="string">'}'</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h5 id="6、编写mapper接口"><a href="#6、编写mapper接口" class="headerlink" title="6、编写mapper接口"></a>6、编写mapper接口</h5><p>在<strong>java</strong>目录下创建：<strong>com.sys.mapper</strong>包，并在里面创建 <strong>EmpMapper</strong> 接口。</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//第二步</span></span><br><span class="line"><span class="keyword">package</span> com.sys.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sys.bean.Employee;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * EmpMapper：是一个mapper接口，该接口中的所有方法用于对 数据表employees 进行增删改查操作！！！</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmpMapper</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 根据id去查询指定的数据</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="function">Employee <span class="title">findEmpById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h5 id="7、编写对接口的xml映射文件"><a href="#7、编写对接口的xml映射文件" class="headerlink" title="7、编写对接口的xml映射文件"></a>7、编写对接口的xml映射文件</h5><p>在<strong>resource</strong>目录下创建：<strong>com\sys\mapper</strong> 文件夹，并在里面创建关于<strong>EmpMapper接口</strong>的映射文件<strong>EmpMapper.xml</strong>。</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--第三步：官网获取代码--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    &lt;mapper&gt;：写指定接口的映射</span></span><br><span class="line"><span class="comment">    注意：每一个mapper映射文件都对应一个mapper接口</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    namespace：写该mapper所映射的 接口的类路径</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.sys.mapper.EmpMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &lt;select&gt;：在该标签中编写指定接口方法的sql语句</span></span><br><span class="line"><span class="comment">        id：写接口方法的名字</span></span><br><span class="line"><span class="comment">        resultType：告诉 mybatis 将 mysql返回数据 封装成什么类型的对象</span></span><br><span class="line"><span class="comment">                 这里应该写 指定类型的类路径</span></span><br><span class="line"><span class="comment">                 注意：当我们在配置文件当中设置了别名的时候，这里就可写指定类型的别名</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findEmpById"</span> <span class="attr">resultType</span>=<span class="string">"Employee"</span>&gt;</span>		</span><br><span class="line">        SELECT * FROM employees WHERE employee_id = #{id}</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="注意：-1"><a href="#注意：-1" class="headerlink" title="注意："></a>注意：</h5><p>​        1、在<strong>resource</strong> 目录下创建文件的时候一定要使用：<strong>com\sys\mapper</strong> 这种格式。博主开始的时候使用：**com.sys.mapper ** 这种方式创建，结果疯狂报错，不好找到，最后翻阅文档，才知道是这样创建的。</p>
<p>​        2、EmpMapper接口的包名 要与 EmpMapper.xml的文件夹名一样。里面创建的文件名也要相同。</p>
<p>​        3、<strong>select</strong>标签内的 <strong>resultType</strong> 的值与 mybatis-config.xml 配置的别名有关。相关代码如下：</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line">// 关于别名</span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        第一种：</span></span><br><span class="line"><span class="comment">        &lt;typeAlias&gt;：用于给指定的实体类起别名</span></span><br><span class="line"><span class="comment">        type：写实体类的类路径</span></span><br><span class="line"><span class="comment">        此时，别名就是我们的类名，并且别名是忽略大小写的</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;typeAlias type="com.sys.bean.Employee"&gt;&lt;/typeAlias&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        第二种：</span></span><br><span class="line"><span class="comment">        alias：为实体类指定一个别名</span></span><br><span class="line"><span class="comment">        此时，实体类的别名就是alias的属性值</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;typeAlias type="com.sys.bean.Employee" alias="emp"&gt;&lt;/typeAlias&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">       第三种：</span></span><br><span class="line"><span class="comment">       当实体类过多时，可以使用&lt;package&gt;进行批量起别名</span></span><br><span class="line"><span class="comment">       name：实体类所在的包</span></span><br><span class="line"><span class="comment">       此时，指定包下面的所有实体类都会起别名，实体类的别名是：类名。并且忽略大小写</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.sys.bean"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>​        4、要在<strong>mybatis-config.xml</strong>配置文件中的 <strong>mappers</strong> 标签中引入关于接口的<strong>mapper映射文件</strong>。相关代码如下：</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 第四步 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;mappers&gt;：在这个标签中，引入mapper映射文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &lt;mapper&gt;：使用该标签引入mapper映射文件</span></span><br><span class="line"><span class="comment">        resource：使用相对的物理路径直接引入</span></span><br><span class="line"><span class="comment">        class：使用接口的类路径，间接引入</span></span><br><span class="line"><span class="comment">        url：通过网络路径引入</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;mapper resource="org/mybatis/example/BlogMapper.xml"/&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;mapper class="com.sys.mapper.EmpMapper"&gt;&lt;/mapper&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        当映射文件过多时，可以使用&lt;package&gt;标签进行批量引入</span></span><br><span class="line"><span class="comment">        name：写编译之后的mapper接口、mapper映射文件所在的包名</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.sys.mapper"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="8、创建程序启动文件"><a href="#8、创建程序启动文件" class="headerlink" title="8、创建程序启动文件"></a>8、创建程序启动文件</h5><p>在<strong>test -&gt; java</strong>目录下，创建 <strong>TestEmpMapper.java</strong> 程序启动文件。</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//第五步</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sys.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> com.sys.mapper.EmpMapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 测试EmpMapper接口和映射文件</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestEmpMapper</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * 测试EmpMapper接口中的findEmpById方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindEmpById</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>{</span><br><span class="line">    <span class="comment">// 获取 mybatis-config.xml 文件的IO流</span></span><br><span class="line">    InputStream resourceAsStream = Resources.getResourceAsStream(<span class="string">"mybatis-config.xml"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        SqlSessionFactoryBuilder：通过输入流，根据配置文件生成一个SqlSessionFactory对象</span></span><br><span class="line"><span class="comment">        注意：需要调用build()方法才能生成一个SqlSessionFactory对象，并且该方法的形参是配置文件的输入流。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">      SqlSessionFactory build = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(resourceAsStream);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        SqlSessionFactory：是一个批量生产SqlSession对象的工厂</span></span><br><span class="line"><span class="comment">        注意：需要调用 openSession() 方法才能生成 SqlSession对象</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   ​     SqlSession：用于执行持久化操作的对象，类似于JDBC中的Connection</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">      SqlSession sqlSession = build.openSession();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        使用SqlSession.getMapper()方法获取mapper接口的代理对象</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">      EmpMapper mapper = sqlSession.getMapper(EmpMapper.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用 代理对象的findEmpById() 方法执行持久化操作（CRUD）</span></span><br><span class="line">    Employee emp = mapper.findEmpById(<span class="number">101</span>);</span><br><span class="line">    System.out.println(emp);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
</search>
